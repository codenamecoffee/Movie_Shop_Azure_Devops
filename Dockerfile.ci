FROM python:3.12-slim

# Establecer directorio de trabajo
WORKDIR /app

# Instalar dependencias del sistema
RUN apt-get update && apt-get install -y --no-install-recommends \
    gcc build-essential curl ca-certificates \
    && curl -LsSf https://astral.sh/uv/install.sh | sh \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Copiamos archivos necesarios para instalar dependencias
COPY movie_shop_backend/pyproject.toml .
COPY movie_shop_backend/uv.lock .

# Agregar uv al PATH
ENV PATH="/root/.cargo/bin:/root/.local/bin:${PATH}"

# Instalar dependencias con uv
RUN uv sync --frozen

# Crear carpeta data antes de copiar el archivo de estado
RUN mkdir -p data

# Copiamos los datos del proyecto
COPY movie_shop_backend/src ./src
COPY movie_shop_backend/app_state.json ./data/app_state.json
COPY testing ./testing

# Instalar dependencias de testing
RUN uv pip install -r testing/requirements.txt

# Instalar pytest en el Python global
RUN python -m pip install --upgrade pip && python -m pip install pytest

# Configurar variables de entorno
ENV STATE_FILE=/app/data/app_state.json
ENV PYTHONUNBUFFERED=1
ENV UV_CACHE_DIR=/app/.uv-cache

# Exponer puerto y comando
EXPOSE 8000
CMD ["uv", "run", "--with", "uvicorn", "uvicorn", "src.main:app", "--host", "0.0.0.0", "--port", "8000"]



##########elimine todo lo de user y group porque no me funcionaba en windows##########